package com.exploitlab.untrusteddeserialization.service;

import org.springframework.stereotype.Service;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.Base64;

/**
 * <b>File:</b> EncoderService.java
 * <p>
 * <b>Description:</b> Utility service that converts Serializable objects into base64 string
 *
 * @author Derek Garcia
 */
@Service
public class EncoderService {

    /**
     * Encode Serializable object in Base64 String
     *
     * @param object Object to serialize
     * @return object in Base64 String
     * @throws IOException if an I/O error occurs while writing stream header
     */
    public String encodeObject(Serializable object) throws IOException {
        // Convert object to bytes
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        try (ObjectOutputStream oos = new ObjectOutputStream(baos)) {
            oos.writeObject(object);
        }

        // return encoding
        return Base64.getEncoder().encodeToString(baos.toByteArray());
    }
}
